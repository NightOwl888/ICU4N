<Project>

  <PropertyGroup>
    <!-- Changing this setting will allow testing on all target frameworks within Visual Studio 2017.
    Note that the main libraries are multi-targeted, so this has no effect on how they are compiled,
    this setting only affects the test projects. -->
    <!--<TargetFramework>net47</TargetFramework>-->
    <!--<TargetFramework>net472</TargetFramework>-->
    <!--<TargetFramework>net48</TargetFramework>-->
    <!--<TargetFramework>net6.0</TargetFramework>-->
    <!--<TargetFramework>net8.0</TargetFramework>-->
    <!--<TargetFramework>net9.0</TargetFramework>-->
    <TestAllTargetFrameworks>true</TestAllTargetFrameworks>

    <!-- Allow the build script to pass in the test frameworks to build for.
      This overrides the above TargetFramework setting. 
      ICU4N TODO: Due to a parsing bug, we cannot pass a string with a ; to dotnet msbuild, so passing true as a workaround -->

    <!-- Test Client to DLL target works as follows:

      Test Client       | Target Under Test
      net9.0            | net9.0
      net8.0            | net8.0
      net6.0            | netstandard2.0
      net48             | net462
      net472            | net451
      net47             | net40

    -->
    <TargetFrameworks Condition="'$(TestAllTargetFrameworks)' == 'true' And '$(VisualStudioVersion)' &gt;= '16.10'">net9.0;net8.0;net6.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(TestAllTargetFrameworks)' == 'true'">$(TargetFrameworks);net48;net472;net47</TargetFrameworks>
    <TargetFramework Condition=" '$(TargetFrameworks)' != '' "></TargetFramework>

  </PropertyGroup>

  <PropertyGroup Label="Mismatched Target Framework (to override the target framework under test)">
    <SetTargetFramework></SetTargetFramework>
    <SetTargetFramework Condition=" '$(TargetFramework)' == 'net472' ">TargetFramework=net451</SetTargetFramework>
    <SetTargetFramework Condition=" '$(TargetFramework)' == 'net47' ">TargetFramework=net40</SetTargetFramework>
  </PropertyGroup>
  
</Project>